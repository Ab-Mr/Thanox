// Retrieve SDK
def sdkDir
def localProp = project.rootProject.file('local.properties')
if (localProp.exists()) {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    sdkDir = properties.getProperty('sdk.dir')
} else {
    sdkDir = System.getenv("ANDROID_HOME")
    if (sdkDir == null) throw new IllegalStateException("ANDROID HOME IS NOT SET")
    println("Android home: " + sdkDir)
}
println("SDK DIR: " + sdkDir)


// Retrieve aidl tool
def aidl
if (org.gradle.internal.os.OperatingSystem.current().isWindows()) {
    aidl = sdkDir + "\\build-tools\\" + build_versions.build_tools + '\\aidl.exe'
} else {
    aidl = sdkDir + "/build-tools/" + build_versions.build_tools + '/aidl'
}

task idlGen {
    doLast {
        def javaSrcDirs = sourceSets.main.java.srcDirs

        for (srcDir in javaSrcDirs) {
            FileTree tree = fileTree(srcDir)
            tree.each {
                if (it.name.endsWith(".aidl")) {
                    def aidlPath = it.path
                    exec {
                        commandLine aidl, '-I' + srcDir, '-p' + '../../android_sdk/framework.aidl', '-p' + '../../android_sdk/thanos.aidl', aidlPath
                    }
                }
            }

        }
    }
    group "idl"
}

compileJava.dependsOn idlGen
build.dependsOn idlGen